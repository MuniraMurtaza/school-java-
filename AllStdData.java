/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package madarsa;
import javax.swing.table.*;
/**
 *
 * @author shabbir
 */
public class AllStdData extends javax.swing.JFrame {

    /**
     * Creates new form AllStdData
     */
    private AllStdData() {
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        search = new javax.swing.JButton();
        searchDar = new javax.swing.JLabel();
        comboDar = new javax.swing.JComboBox();
        totalStd = new javax.swing.JLabel();
        txt = new javax.swing.JLabel();
        txtTotalStd = new javax.swing.JLabel();
        totalStdDar = new javax.swing.JLabel();
        comboMoh = new javax.swing.JComboBox();
        searchMoh = new javax.swing.JLabel();
        insert = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtTotalStdDar = new javax.swing.JLabel();
        totalStdMoh = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Close = new javax.swing.JButton();
        Print = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        search.setForeground(new java.awt.Color(0, 0, 204));
        search.setText("SEARCH");
        getContentPane().add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(845, 95, 97, 62));

        searchDar.setForeground(new java.awt.Color(0, 0, 204));
        searchDar.setText("SEARCH BY DARAJA :");
        getContentPane().add(searchDar, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 100, 150, 30));

        comboDar.setForeground(new java.awt.Color(0, 0, 204));
        comboDar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All" }));
        getContentPane().add(comboDar, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 99, 209, -1));

        totalStd.setForeground(new java.awt.Color(0, 0, 204));
        totalStd.setText("TOTAL STUDENTS :");
        getContentPane().add(totalStd, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 90, 222, -1));

        txt.setForeground(new java.awt.Color(0, 0, 204));
        getContentPane().add(txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 113, 222, 20));

        txtTotalStd.setForeground(new java.awt.Color(0, 0, 204));
        getContentPane().add(txtTotalStd, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 87, 222, 20));

        totalStdDar.setForeground(new java.awt.Color(0, 0, 204));
        totalStdDar.setText("TOTAL STUDENTS IN DARAJA : ");
        getContentPane().add(totalStdDar, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 139, 222, 20));

        comboMoh.setForeground(new java.awt.Color(0, 0, 204));
        comboMoh.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All" }));
        getContentPane().add(comboMoh, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 132, 209, -1));

        searchMoh.setForeground(new java.awt.Color(0, 0, 204));
        searchMoh.setText("SEARCH BY  MOHALLA:");
        getContentPane().add(searchMoh, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 130, 160, 30));

        insert.setForeground(new java.awt.Color(0, 0, 204));
        insert.setText("INSERT");
        getContentPane().add(insert, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 90, 110, 70));

        jScrollPane1.setForeground(new java.awt.Color(0, 0, 204));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jScrollPane1.setMaximumSize(new java.awt.Dimension(2100000000, 1800));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(2100000000, 1800));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setFont(new java.awt.Font("Comic Sans MS", 0, 10)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 0, 204));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "DARAJA", "REG ID", "E-ID", "NAME", "FATHER NAME", "SUR-NAME", "SABIL #", "DATE OF BIRTH", "AGE", "PHONE #", "CELL #", "MOHALLA", "ADDRESS", "DATE OF ADMISSION", "ADMISSION FEES", "ANNUAL FEES", "PICTURE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTable1.setMaximumSize(new java.awt.Dimension(2000000000, 1800));
        jTable1.setMinimumSize(new java.awt.Dimension(1800, 1800));
        jTable1.setPreferredSize(new java.awt.Dimension(2000000000, 1800));
        jTable1.setRowHeight(25);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                none(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setMinWidth(60);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(60);
        jTable1.getColumnModel().getColumn(1).setMinWidth(60);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(60);
        jTable1.getColumnModel().getColumn(1).setMaxWidth(60);
        jTable1.getColumnModel().getColumn(2).setMinWidth(60);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(60);
        jTable1.getColumnModel().getColumn(2).setMaxWidth(60);
        jTable1.getColumnModel().getColumn(3).setMinWidth(120);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(120);
        jTable1.getColumnModel().getColumn(3).setMaxWidth(120);
        jTable1.getColumnModel().getColumn(4).setMinWidth(120);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(120);
        jTable1.getColumnModel().getColumn(4).setMaxWidth(120);
        jTable1.getColumnModel().getColumn(5).setMinWidth(120);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(120);
        jTable1.getColumnModel().getColumn(5).setMaxWidth(120);
        jTable1.getColumnModel().getColumn(6).setMinWidth(60);
        jTable1.getColumnModel().getColumn(6).setPreferredWidth(60);
        jTable1.getColumnModel().getColumn(6).setMaxWidth(60);
        jTable1.getColumnModel().getColumn(7).setResizable(false);
        jTable1.getColumnModel().getColumn(7).setPreferredWidth(70);
        jTable1.getColumnModel().getColumn(8).setMinWidth(40);
        jTable1.getColumnModel().getColumn(8).setPreferredWidth(40);
        jTable1.getColumnModel().getColumn(8).setMaxWidth(40);
        jTable1.getColumnModel().getColumn(9).setMinWidth(80);
        jTable1.getColumnModel().getColumn(9).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(9).setMaxWidth(80);
        jTable1.getColumnModel().getColumn(10).setMinWidth(80);
        jTable1.getColumnModel().getColumn(10).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(10).setMaxWidth(80);
        jTable1.getColumnModel().getColumn(11).setMinWidth(60);
        jTable1.getColumnModel().getColumn(11).setPreferredWidth(60);
        jTable1.getColumnModel().getColumn(11).setMaxWidth(60);
        jTable1.getColumnModel().getColumn(12).setMinWidth(100);
        jTable1.getColumnModel().getColumn(12).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(12).setMaxWidth(100);
        jTable1.getColumnModel().getColumn(13).setMinWidth(60);
        jTable1.getColumnModel().getColumn(13).setPreferredWidth(70);
        jTable1.getColumnModel().getColumn(13).setMaxWidth(60);
        jTable1.getColumnModel().getColumn(14).setMinWidth(40);
        jTable1.getColumnModel().getColumn(14).setPreferredWidth(40);
        jTable1.getColumnModel().getColumn(14).setMaxWidth(40);
        jTable1.getColumnModel().getColumn(15).setMinWidth(40);
        jTable1.getColumnModel().getColumn(15).setPreferredWidth(40);
        jTable1.getColumnModel().getColumn(15).setMaxWidth(40);
        jTable1.getColumnModel().getColumn(16).setMinWidth(100);
        jTable1.getColumnModel().getColumn(16).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(16).setMaxWidth(100);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 1300, 540));

        txtTotalStdDar.setForeground(new java.awt.Color(0, 0, 204));
        getContentPane().add(txtTotalStdDar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 139, 222, 20));

        totalStdMoh.setForeground(new java.awt.Color(0, 0, 204));
        totalStdMoh.setText("TOTAL STUDENTS IN MOHALLA: ");
        getContentPane().add(totalStdMoh, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 113, -1, 20));

        jLabel9.setFont(new java.awt.Font("Ubuntu", 3, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 204));
        jLabel9.setText("STUDENT BIO-DATA");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(344, 12, 214, 44));

        Close.setForeground(new java.awt.Color(0, 0, 204));
        Close.setText("BACK TO WELCOME PAGE");
        getContentPane().add(Close, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 180, 40));

        Print.setForeground(new java.awt.Color(0, 0, 204));
        Print.setText("PRINT");
        getContentPane().add(Print, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 10, 110, 70));

        pack();
    }// </editor-fold>//GEN-END:initComponents

void searchListener(java.awt.event.ActionListener evt){
    
search.addActionListener(evt);
//adding a listener whose value will be given in the controller class
}
void insertListener(java.awt.event.ActionListener evt){
insert.addActionListener(evt);
//adding a listener whose value will be given in the controller class
}
void closeListener(java.awt.event.ActionListener evt){
    
Close.addActionListener(evt);
//adding a listener whose value will be given in the controller class
}
void printListener(java.awt.event.ActionListener evt){
    
Print.addActionListener(evt);
//adding a listener whose value will be given in the controller class
}
void addComboDarListener(java.awt.event.ActionListener evt){
    
comboDar.addActionListener(evt);

}
void addComboMohListener(java.awt.event.ActionListener evt){
   
comboMoh.addActionListener(evt);
}

protected void setDefault(String[][] str,int totalStd){
String value  = Integer.toString(totalStd);
//setting combo box default values


//value = totalStd.toString();
searchDar.setText(value);
setCombo1(str[0]);
setCombo2(str[1]);

}
protected void setCombo1(String[] str)
{
int num = 0;
while(num < str.length)
{
comboDar.addItem(str[num]);
num++;
}
}
protected void setCombo2(String[] str)
{
int num = 0;
while(num < str.length)
{
comboMoh.addItem(str[num]);
num++;
}
}
protected  void setTotals(int totalRecords)
{
txtTotalStdDar.setText(Integer.toString(totalRecords));
//set total students 3 fields
}


//we will compute the total number of records that are in the database
public String getTotalRecords(){
String regId = ""; 
   
   Object obj = null;
   int num = 0;
   while( jTable1.getValueAt(num,1)!=obj && num<jTable1.getRowCount())
   {    
        num++;
   }
   
   setTotals(num);
   regId = getRollNum(num);
   return regId;
}

//computes the next roll num of the student
public String getRollNum(int totalRecords){
int nxtRollNum = 0;
String regId = "";  

if(totalRecords >= 1)
{
   regId = (String) jTable1.getValueAt(totalRecords-1,1);
    regId = regId.substring(6);
    nxtRollNum = Integer.parseInt(regId);
}    

nxtRollNum++;
regId = Integer.toString(nxtRollNum);

return regId;
}

//concatinates the entire RegId
public String[] getRegId(String[] darMoh){
String[] regId = new String[3];
regId[0] = darMoh[0]+darMoh[1]+getTotalRecords();
regId[1] = comboDar.getSelectedItem().toString();
regId[2] = comboMoh.getSelectedItem().toString();
return regId;

}

//get the value of first row from the table
protected String[] getTableData(int rowCounter){
String[] tableData = new String[18]; 
int count;

for( count = 0;count<=16;count++)
{

    tableData[count] = (String) jTable1.getValueAt(rowCounter,count);
  
}
tableData[count] = txtTotalStdDar.getText();
return tableData;
}
   
protected String[] getVerification(){


//firstly get the value of daraja and mohalla as it should not be null
comboDarValue[0] = comboDar.getSelectedItem().toString(); 
comboDarValue[1] = comboMoh.getSelectedItem().toString(); 
return comboDarValue;
}
protected String[] getDataVerification(){


//firstly get the value of daraja and mohalla as it should not be null
comboDarValue[0] = "'"+comboDar.getSelectedItem().toString()+"'"; 
comboDarValue[1] = "'"+comboMoh.getSelectedItem().toString()+"'"; 
return comboDarValue;
}
protected void clearData(){
    int value = Integer.parseInt(txtTotalStdDar.getText());
txtTotalStdDar.setText("0");

    for(int count = 0;count<value;count++)
    {
((DefaultTableModel)jTable1.getModel()).removeRow(count);
}
}
protected void setTableData(String data[][])
{
//set data in the table
int arrayList = 0;
while(data[arrayList]!= null){ 
for(int num = 0;num<jTable1.getColumnCount();num++)
{
    jTable1.setValueAt(data[arrayList][num], counter, num);

}
counter++;
System.out.println("in AllStdData"+arrayList);
arrayList++;
}
}
protected void setTableData(String data[])
{
//set data in the table
    System.out.println("setTableData in AllStdData executed"+counter);
    if(data[data.length-1] == "insert")
{
    System.out.println("setTableData in AllStdData executed"+counter);
for(int num = 0;num<jTable1.getColumnCount();num++)
{
    jTable1.setValueAt(data[num], counter, num);

}
counter++;
}
else 
{
    int rowNum = Integer.parseInt(data[data.length-1]);
for(int num = 0;num<jTable1.getColumnCount();num++)
{
    jTable1.setValueAt(data[num], rowNum, num);

}
}
}

protected void editing(String[] data){

    
    for(int num = 0;num<jTable1.getColumnCount();num++)
{
    jTable1.setValueAt(num, counter, num);

}    

}
protected void removeRow(){

counter = 0;
}

    private void none(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_none
        // TODO add your handling code here:
    }//GEN-LAST:event_none

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized

        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentResized
   public static AllStdData getInstance() {
            if(instance == null) {
         instance = new AllStdData();
      }
    return instance;
  } 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllStdData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllStdData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllStdData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllStdData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                       AllStdDataController controller = AllStdDataController.getInstance() ;

            }
        });
    }
    
    private int totalRecords = 0;
    private String[] dataRead = new String[18];
    private static int counter = 0;
   static Thread t = new Thread();
   public String comboDarValue[] = new String[2];
                 private static AllStdData instance = null;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Close;
    private javax.swing.JButton Print;
    private javax.swing.JComboBox comboDar;
    private javax.swing.JComboBox comboMoh;
    private javax.swing.JButton insert;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton search;
    private javax.swing.JLabel searchDar;
    private javax.swing.JLabel searchMoh;
    private javax.swing.JLabel totalStd;
    private javax.swing.JLabel totalStdDar;
    private javax.swing.JLabel totalStdMoh;
    private javax.swing.JLabel txt;
    private javax.swing.JLabel txtTotalStd;
    private javax.swing.JLabel txtTotalStdDar;
    // End of variables declaration//GEN-END:variables
}
